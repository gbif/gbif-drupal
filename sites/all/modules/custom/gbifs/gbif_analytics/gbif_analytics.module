<?php
/**
 * @file
 * gbif_analytics.module
 */

/**
 * Implements hook_menu().
 */
function gbif_analytics_menu() {
	$items['analytics'] = array(
		'title' => 'Analytics',
		'description' => 'The page callback can use the arguments provided after the path used as key',
		'page callback' => 'gbif_analytics_url_router',
		'access callback' => TRUE,
		'weight' => 10,
	);
	return $items;
}

/**
 * Implements hook_theme().
 */
function gbif_analytics_theme($existing, $type, $theme, $path) {
	return array(
		'gbif_analytics_home' => array(
			'template' => 'theme/detail',
		),
	);
}

/**
 * This does the routing based on the URL.
 */
function gbif_analytics_url_router($type, $iso2, $subType) {
	$dataSharing = 'This chart shows the total number of records published through GBIF over time, with separate colours for records published from within the country where the species occurred, and those shared by publishers from other countries.';
	$baseURL = 'http://analytics.gbif-uat.org/';
	if ($type == 'country' && $subType == 'about'){
		$baseURL = $baseURL . 'country' . '/' . $iso2 . '/about/figure' ;
		$dataSharing = 'This chart shows the number of records about biodiversity occurring in '
			. $iso2
			. ', with separate colours for records published from within '
			. $iso2
			. ', and those shared by publishers from other countries.';

	} else if ($type == 'country' && $subType == 'published') {
		$baseURL = $baseURL . 'country' . '/' . $iso2 . '/publishedBy/figure' ;
		$dataSharing = 'This chart shows the number of records shared by publishers within '
        . $iso2
        . ' over time, with separate colours for records about species occurring in '
        . $iso2
        . ' and those occurring in other countries.';
	} else {
		$baseURL = $baseURL . 'global/figure';
	}

	// TODO: set the imgBaseUrl based on the params
	return theme('gbif_analytics_home', array(
		'imgBaseUrl' => $baseURL,
		'assetsUrl' => 'http://analytics.gbif-uat.org/assets',
		'datasharingDescription' => $dataSharing
	));
}

/**
 * Custom libraries for this module to load lightbox, and custom styling.
 * Implements hook_library().
 */
function gbif_analytics_library() {
	$path = drupal_get_path('module', 'gbif_analytics');
	$libraries['lightbox'] = array(
		'title' => 'Lightbox',
		'js' => array(
			$path . '/js/lightbox.min.js' => array(
				'type' => 'file',
				'scope' => 'footer',
				'weight' => 20,
			)
		),
		'css' => array(
			$path . '/css/lightbox.css' => array(
				'type' => 'file',
				'weight' => 20,
			),
		)
	);
	$libraries['analytics'] = array(
		'title' => 'GBIF Analytics custom styling',
		'css' => array(
			$path . '/css/gbif-analytics.css' => array(
				'type' => 'file',
				'weight' => 20,
			),
		)
	);
	return $libraries;
}

/**
 * Implements hook_preprocess_page().
 */
function gbif_analytics_preprocess_page(&$variables) {
	// load in lightbox CSS and JS
	watchdog('analytics', 'Loading custom libraries for module', array(), WATCHDOG_DEBUG);
	drupal_add_library('gbif_analytics', 'lightbox');
	drupal_add_library('gbif_analytics', 'analytics');
}
