<?php
/**
 * Created by PhpStorm.
 * User: bko
 * Date: 27/6/14
 * Time: 5:50 PM
 */

module_load_include('inc', 'gbif_ims', 'gbif_ims.schema');

/**
 * Implementation of hook_requirements()
 */
function gbif_ims_requirements($phase) {
  $requirements = array();
  if ($phase == "runtime") {
    // Try to load the API.
    filemaker_load_api();
    $requirements['gbif_ims']['title'] = t('GBIF IMS');
    
    // Is the API available?
    if (class_exists('FileMaker')) {
      $requirements['gbif_ims']['value'] = 'FileMaker API is installed correctly';
      $requirements['gbif_ims']['severity'] = REQUIREMENT_OK;
    }

    // Required API wasn't found.
    else {
      $requirements['gbif_ims']['value'] = t('FileMaker API was not found');

      // Provide instructions on installing the FileMaker API for PHP.
      $requirements['gbif_ims']['description'] = t('The FileMaker API for PHP is required for this module. The API comes with your copy of FileMaker server and should be placed in sites/all/libraries/filemakerapi.');
      $requirements['gbif_ims']['severity'] = REQUIREMENT_ERROR;
    }
  }
  return $requirements;
}

/**
 * Implements hook_install().
 */
function gbif_ims_install() {
	_gbif_ims_create_custom_fields();
}

/**
 * Implements hook_uninstall()
 */
function gbif_ims_uninstall() {
	drupal_uninstall_schema('gbif_ims');
	// @todo Look for established content and delete them.
	_gbif_ims_delete_custom_fields();
}

/**
 * Implements hook_schema().
 *
 * Fields settings need to have their mapping with the IMS, so a helper function
 * _gbif_ims_fields() is used to populate the tables and fields with their
 * IMS table and field name first, then here unnecessary values are trimmed
 * before returning for hook_schema().
 */
function gbif_ims_schema() {
	$schema = _gbif_ims_tables();
	foreach ($schema as $table_name => $table) {
		unset($schema[$table_name]['ims_eqv']);
		foreach ($table['fields'] as $field_name => $field) {
			if ($field_name == 'ims_eqv') {
				unset($schema[$table_name]['fields']['ims_eqv']);
			}
		}
	}
	return $schema;
}

function _gbif_ims_create_custom_fields() {
	foreach (_gbif_ims_installed_fields() as $field) {
		field_create_field($field);
	}
}

function _gbif_ims_delete_custom_fields() {
	foreach (array_keys(_gbif_ims_installed_fields()) as $field) {
		field_delete_field($field);
	}
}

/**
 * Handling all common IMS fields.
 * We create these common fields here and expect field instances are created in
 * various modules that deal with IMS content units.
 */
function _gbif_ims_installed_fields() {
	$t = get_t();
	return array(
		'ims_kp_id' => array(
			'label' => $t('Primary ID for each IMS table.'),
			'active' => '1',
			'cardinality' => '1',
			'deleted' => '0',
			'entity_types' => array(), // Empty means can have instances in any entity type.
			'field_name' => 'ims_kp_id',
			'foreign keys' => array(),
			'indexes' => array(),
			'locked' => '1',
			'module' => 'number',
			'settings' => array(),
			'translatable' => '0',
			'type' => 'number_integer',
		),
		'ims_date' => array(
			'label' => $t('For IMS contents that need to indicate date.'),
			'active' => '1',
			'cardinality' => '1',
			'deleted' => '0',
			'entity_types' => array(),
			'field_name' => 'ims_date',
			'foreign keys' => array(),
			'indexes' => array(),
			'locked' => '1',
			'module' => 'date',
			'settings' => array(
				'cache_count' => '4',
				'cache_enabled' => 1,
				'granularity' => array(
					'day' => 'day',
					'hour' => 0,
					'minute' => 0,
					'month' => 'month',
					'second' => 0,
					'year' => 'year',
				),
				'repeat' => '0',
				'timezone_db' => 'UTC',
				'todate' => 'optional',
				'tz_handling' => 'none',
			),
			'translatable' => '0',
			'type' => 'datestamp',
		),
	);
}

/**
 * Create new database tables for Resource management.
 */
function gbif_ims_update_7001() {
	$tables = array(
		'gbif_ims_file',
		'gbif_ims_file_cluster',
		'gbif_ims_file_cluster_type',
		'gbif_ims_file_event_access_category',
		'gbif_ims_file_file_cluster',
		'gbif_ims_file_group',
		'gbif_ims_file_keyword',
		'gbif_ims_file_path',
		'gbif_ims_file_resource_tree',
		'gbif_ims_file_type',
		'gbif_ims_keyword',
		'gbif_ims_keyword_keyword_type',
		'gbif_ims_keyword_language',
		'gbif_ims_keyword_type',
		'gbif_ims_language',
	);
	$schema = _gbif_ims_tables();
	foreach ($tables as $table) {
		db_create_table($table, $schema[$table]);
	}
}

/**
 * Create new database tables for region attribution.
 */
function gbif_ims_update_7002() {
  $tables = array(
    'gbif_ims_region',
  );
  $schema = _gbif_ims_tables();
  foreach ($tables as $table) {
    db_create_table($table, $schema[$table]);
  }
}

/**
 * Add more fields to gbif_ims_participant table.
 */
function gbif_ims_update_7003() {
  $tables = array(
    'gbif_ims_participant',
  );
  $fields_to_add = array(
    'mou2001_date',
    'mou2001_signatory',
    'mou2007_date',
    'mou2007_signatory',
    'mou2012_signatory'
  );
  $schema = _gbif_ims_tables();
  foreach ($tables as $table) {
    foreach ($fields_to_add as $field) {
      db_add_field($table, $field, $schema[$table]['fields'][$field]);
    }
  }
}