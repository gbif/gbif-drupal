<?php

/**
* 
* @ingroup GBIF
*/


/**
* Implements hook_menu().
*
*/
function gfxr_menu() {
	$items['admin/config/gfxr/settings'] = array(
			'title' => 'GBIF Fixer',
			'description' => 'A collection of various fixes needed for the GBIF implementation on Drupal',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('gfxr_form'),
			'access arguments' => array('administer site configuration'),
			'type' => MENU_NORMAL_ITEM,
			'file' => 'gfxr.admin.inc',
			);
	$items['workshop'] = array(
			'title' => 'Sawing/milling machines go here',
			'description' => 'A placeholder',
			'page callback' => 'workshop',
			'access arguments' => array('use the shop'),
			);

	return $items;

}


function gfxr_permission() {
	return array(
		'use the shop' => array(
		'title' => t('Use the workshop tools'),
		'description' => t('Allow users to perform various operations.'),
		),
	);
}

/**
 * Implements hook_token_info().
 */
function gfxr_token_info() {
	global $base_url ;

	$types['gfxr'] = array(
		'name' => t("GBIF Fixer tokens"),
		'description' => t("Tokens for various local fixes"),
	);

	$gfxr['baseurl'] = array(
		'name' => t("$base_url"),
		'description' => t("Emit $base_url to be used inside large text fields"),
	);

	return array(
		'types' => $types,
		'tokens' => array(
		'gfxr' => $gfxr,
	),
	);
}

/**
 * Implements hook_tokens().
 */
function gfxr_tokens($type, $tokens, array $data = array(), array $options = array()) {
  global $user;

	$replacements = array();
  
	if ($type == 'gfxr') {
		foreach ($tokens as $name => $original) {
			switch ($name) {
				case 'cp':
					$replacements[$original] = $GLOBALS['base_url'];
				break;
				case 'dp':
					$replacements[$original] = theme_get_setting( 'vizz2_dataportal_base_url','vizz2' ) ;
				break;
				
			}
		}
	}
  
  return $replacements;
}


/**
 * Implements hook_entity_info_alter().
 *
 * Add an additional display mode
 * so that various custom view(s) can make use of the extra 
 * setting
 */
function gfxr_entity_info_alter(&$entity_info) {
	$entity_info['node']['view modes']['teaser_nt'] = array(
		'label' => t('Teaser_NT'),
		'custom settings' => TRUE,
	);

}




function workshop() {

}